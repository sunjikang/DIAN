package com.xing.module.quality.db;

import java.util.List;
import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.query.Query;
import org.greenrobot.greendao.query.QueryBuilder;

import com.xing.module.quality.bean.Plan;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "Plan".
*/
public class PlanDao extends AbstractDao<Plan, Long> {

    public static final String TABLENAME = "Plan";

    /**
     * Properties of entity Plan.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property MonthId = new Property(1, Long.class, "monthId", false, "MONTH_ID");
        public final static Property Pic = new Property(2, String.class, "pic", false, "PIC");
        public final static Property FactoryCode = new Property(3, String.class, "factoryCode", false, "FACTORY_CODE");
        public final static Property Brand = new Property(4, String.class, "brand", false, "BRAND");
        public final static Property Classes = new Property(5, String.class, "classes", false, "CLASSES");
        public final static Property Series = new Property(6, String.class, "series", false, "SERIES");
        public final static Property ProdSeries = new Property(7, String.class, "prodSeries", false, "PROD_SERIES");
        public final static Property SaleorderNo = new Property(8, String.class, "saleorderNo", false, "SALEORDER_NO");
        public final static Property SaleorderLine = new Property(9, String.class, "saleorderLine", false, "SALEORDER_LINE");
        public final static Property SapmoCode = new Property(10, String.class, "sapmoCode", false, "SAPMO_CODE");
        public final static Property SapmoCodeline = new Property(11, String.class, "sapmoCodeline", false, "SAPMO_CODELINE");
        public final static Property SendDate = new Property(12, java.util.Date.class, "sendDate", false, "SEND_DATE");
        public final static Property FinishDate = new Property(13, java.util.Date.class, "finishDate", false, "FINISH_DATE");
        public final static Property TsCode = new Property(14, String.class, "tsCode", false, "TS_CODE");
        public final static Property CustomerDelivery = new Property(15, java.util.Date.class, "customerDelivery", false, "CUSTOMER_DELIVERY");
        public final static Property ShippingDate = new Property(16, java.util.Date.class, "shippingDate", false, "SHIPPING_DATE");
        public final static Property SapCode = new Property(17, String.class, "sapCode", false, "SAP_CODE");
        public final static Property CustomprodNo = new Property(18, String.class, "customprodNo", false, "CUSTOMPROD_NO");
        public final static Property ProdName = new Property(19, String.class, "prodName", false, "PROD_NAME");
        public final static Property InoutType = new Property(20, String.class, "inoutType", false, "INOUT_TYPE");
        public final static Property Spec = new Property(21, String.class, "spec", false, "SPEC");
        public final static Property TotalTime = new Property(22, Integer.class, "totalTime", false, "TOTAL_TIME");
        public final static Property Qty = new Property(23, Integer.class, "qty", false, "QTY");
        public final static Property FastPass = new Property(24, Integer.class, "fastPass", false, "FAST_PASS");
        public final static Property Price = new Property(25, Integer.class, "price", false, "PRICE");
        public final static Property ProductionValue = new Property(26, Integer.class, "productionValue", false, "PRODUCTION_VALUE");
        public final static Property JjAssigning = new Property(27, String.class, "jjAssigning", false, "JJ_ASSIGNING");
        public final static Property TsAssigning = new Property(28, String.class, "tsAssigning", false, "TS_ASSIGNING");
        public final static Property FinishDate0 = new Property(29, java.util.Date.class, "finishDate0", false, "FINISH_DATE0");
        public final static Property FinishDate1 = new Property(30, java.util.Date.class, "finishDate1", false, "FINISH_DATE1");
        public final static Property FinishDate2 = new Property(31, java.util.Date.class, "finishDate2", false, "FINISH_DATE2");
        public final static Property FinishDate3 = new Property(32, java.util.Date.class, "finishDate3", false, "FINISH_DATE3");
        public final static Property FinishDate4 = new Property(33, java.util.Date.class, "finishDate4", false, "FINISH_DATE4");
        public final static Property FinishDate5 = new Property(34, java.util.Date.class, "finishDate5", false, "FINISH_DATE5");
        public final static Property FinishDate6 = new Property(35, java.util.Date.class, "finishDate6", false, "FINISH_DATE6");
        public final static Property FinishDate7 = new Property(36, java.util.Date.class, "finishDate7", false, "FINISH_DATE7");
        public final static Property FinishDate8 = new Property(37, java.util.Date.class, "finishDate8", false, "FINISH_DATE8");
        public final static Property FinishDate9 = new Property(38, java.util.Date.class, "finishDate9", false, "FINISH_DATE9");
        public final static Property FinishDate10 = new Property(39, java.util.Date.class, "finishDate10", false, "FINISH_DATE10");
        public final static Property FinishDate11 = new Property(40, java.util.Date.class, "finishDate11", false, "FINISH_DATE11");
        public final static Property FinishDate12 = new Property(41, java.util.Date.class, "finishDate12", false, "FINISH_DATE12");
        public final static Property FinishDate13 = new Property(42, java.util.Date.class, "finishDate13", false, "FINISH_DATE13");
        public final static Property FinishDate14 = new Property(43, java.util.Date.class, "finishDate14", false, "FINISH_DATE14");
        public final static Property FinishDate15 = new Property(44, java.util.Date.class, "finishDate15", false, "FINISH_DATE15");
        public final static Property FinishDate16 = new Property(45, java.util.Date.class, "finishDate16", false, "FINISH_DATE16");
        public final static Property FinishDate17 = new Property(46, java.util.Date.class, "finishDate17", false, "FINISH_DATE17");
        public final static Property FinishDate18 = new Property(47, java.util.Date.class, "finishDate18", false, "FINISH_DATE18");
        public final static Property FinishDate19 = new Property(48, java.util.Date.class, "finishDate19", false, "FINISH_DATE19");
        public final static Property FinishDate20 = new Property(49, java.util.Date.class, "finishDate20", false, "FINISH_DATE20");
        public final static Property Remakes = new Property(50, String.class, "remakes", false, "REMAKES");
        public final static Property Monthly = new Property(51, String.class, "monthly", false, "MONTHLY");
        public final static Property Week = new Property(52, String.class, "week", false, "WEEK");
        public final static Property LockFlag = new Property(53, String.class, "lockFlag", false, "LOCK_FLAG");
        public final static Property FCreatorruserid = new Property(54, String.class, "fCreatorruserid", false, "F_CREATORRUSERID");
        public final static Property FCreatortime = new Property(55, java.util.Date.class, "fCreatortime", false, "F_CREATORTIME");
        public final static Property FLockcreatorruserid = new Property(56, String.class, "fLockcreatorruserid", false, "F_LOCKCREATORRUSERID");
        public final static Property FLockcreatortime = new Property(57, java.util.Date.class, "fLockcreatortime", false, "F_LOCKCREATORTIME");
        public final static Property Remark2 = new Property(58, String.class, "remark2", false, "REMARK2");
        public final static Property Field02 = new Property(59, String.class, "field02", false, "FIELD02");
        public final static Property Field03 = new Property(60, String.class, "field03", false, "FIELD03");
        public final static Property Field04 = new Property(61, String.class, "field04", false, "FIELD04");
        public final static Property Field05 = new Property(62, String.class, "field05", false, "FIELD05");
        public final static Property FDeletemark = new Property(63, String.class, "fDeletemark", false, "F_DELETEMARK");
        public final static Property FLastmodifytime = new Property(64, java.util.Date.class, "fLastmodifytime", false, "F_LASTMODIFYTIME");
        public final static Property FLastmodifyuserid = new Property(65, String.class, "fLastmodifyuserid", false, "F_LASTMODIFYUSERID");
        public final static Property FDeletetime = new Property(66, java.util.Date.class, "fDeletetime", false, "F_DELETETIME");
        public final static Property FDeleteuserid = new Property(67, String.class, "fDeleteuserid", false, "F_DELETEUSERID");
    }

    private Query<Plan> planMonth_PlanListQuery;

    public PlanDao(DaoConfig config) {
        super(config);
    }
    
    public PlanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"Plan\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"MONTH_ID\" INTEGER NOT NULL ," + // 1: monthId
                "\"PIC\" TEXT," + // 2: pic
                "\"FACTORY_CODE\" TEXT," + // 3: factoryCode
                "\"BRAND\" TEXT," + // 4: brand
                "\"CLASSES\" TEXT," + // 5: classes
                "\"SERIES\" TEXT," + // 6: series
                "\"PROD_SERIES\" TEXT," + // 7: prodSeries
                "\"SALEORDER_NO\" TEXT," + // 8: saleorderNo
                "\"SALEORDER_LINE\" TEXT," + // 9: saleorderLine
                "\"SAPMO_CODE\" TEXT," + // 10: sapmoCode
                "\"SAPMO_CODELINE\" TEXT," + // 11: sapmoCodeline
                "\"SEND_DATE\" INTEGER," + // 12: sendDate
                "\"FINISH_DATE\" INTEGER," + // 13: finishDate
                "\"TS_CODE\" TEXT," + // 14: tsCode
                "\"CUSTOMER_DELIVERY\" INTEGER," + // 15: customerDelivery
                "\"SHIPPING_DATE\" INTEGER," + // 16: shippingDate
                "\"SAP_CODE\" TEXT," + // 17: sapCode
                "\"CUSTOMPROD_NO\" TEXT," + // 18: customprodNo
                "\"PROD_NAME\" TEXT," + // 19: prodName
                "\"INOUT_TYPE\" TEXT," + // 20: inoutType
                "\"SPEC\" TEXT," + // 21: spec
                "\"TOTAL_TIME\" INTEGER," + // 22: totalTime
                "\"QTY\" INTEGER," + // 23: qty
                "\"FAST_PASS\" INTEGER," + // 24: fastPass
                "\"PRICE\" INTEGER," + // 25: price
                "\"PRODUCTION_VALUE\" INTEGER," + // 26: productionValue
                "\"JJ_ASSIGNING\" TEXT," + // 27: jjAssigning
                "\"TS_ASSIGNING\" TEXT," + // 28: tsAssigning
                "\"FINISH_DATE0\" INTEGER," + // 29: finishDate0
                "\"FINISH_DATE1\" INTEGER," + // 30: finishDate1
                "\"FINISH_DATE2\" INTEGER," + // 31: finishDate2
                "\"FINISH_DATE3\" INTEGER," + // 32: finishDate3
                "\"FINISH_DATE4\" INTEGER," + // 33: finishDate4
                "\"FINISH_DATE5\" INTEGER," + // 34: finishDate5
                "\"FINISH_DATE6\" INTEGER," + // 35: finishDate6
                "\"FINISH_DATE7\" INTEGER," + // 36: finishDate7
                "\"FINISH_DATE8\" INTEGER," + // 37: finishDate8
                "\"FINISH_DATE9\" INTEGER," + // 38: finishDate9
                "\"FINISH_DATE10\" INTEGER," + // 39: finishDate10
                "\"FINISH_DATE11\" INTEGER," + // 40: finishDate11
                "\"FINISH_DATE12\" INTEGER," + // 41: finishDate12
                "\"FINISH_DATE13\" INTEGER," + // 42: finishDate13
                "\"FINISH_DATE14\" INTEGER," + // 43: finishDate14
                "\"FINISH_DATE15\" INTEGER," + // 44: finishDate15
                "\"FINISH_DATE16\" INTEGER," + // 45: finishDate16
                "\"FINISH_DATE17\" INTEGER," + // 46: finishDate17
                "\"FINISH_DATE18\" INTEGER," + // 47: finishDate18
                "\"FINISH_DATE19\" INTEGER," + // 48: finishDate19
                "\"FINISH_DATE20\" INTEGER," + // 49: finishDate20
                "\"REMAKES\" TEXT," + // 50: remakes
                "\"MONTHLY\" TEXT," + // 51: monthly
                "\"WEEK\" TEXT," + // 52: week
                "\"LOCK_FLAG\" TEXT," + // 53: lockFlag
                "\"F_CREATORRUSERID\" TEXT," + // 54: fCreatorruserid
                "\"F_CREATORTIME\" INTEGER," + // 55: fCreatortime
                "\"F_LOCKCREATORRUSERID\" TEXT," + // 56: fLockcreatorruserid
                "\"F_LOCKCREATORTIME\" INTEGER," + // 57: fLockcreatortime
                "\"REMARK2\" TEXT," + // 58: remark2
                "\"FIELD02\" TEXT," + // 59: field02
                "\"FIELD03\" TEXT," + // 60: field03
                "\"FIELD04\" TEXT," + // 61: field04
                "\"FIELD05\" TEXT," + // 62: field05
                "\"F_DELETEMARK\" TEXT," + // 63: fDeletemark
                "\"F_LASTMODIFYTIME\" INTEGER," + // 64: fLastmodifytime
                "\"F_LASTMODIFYUSERID\" TEXT," + // 65: fLastmodifyuserid
                "\"F_DELETETIME\" INTEGER," + // 66: fDeletetime
                "\"F_DELETEUSERID\" TEXT);"); // 67: fDeleteuserid
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"Plan\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Plan entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getMonthId());
 
        String pic = entity.getPic();
        if (pic != null) {
            stmt.bindString(3, pic);
        }
 
        String factoryCode = entity.getFactoryCode();
        if (factoryCode != null) {
            stmt.bindString(4, factoryCode);
        }
 
        String brand = entity.getBrand();
        if (brand != null) {
            stmt.bindString(5, brand);
        }
 
        String classes = entity.getClasses();
        if (classes != null) {
            stmt.bindString(6, classes);
        }
 
        String series = entity.getSeries();
        if (series != null) {
            stmt.bindString(7, series);
        }
 
        String prodSeries = entity.getProdSeries();
        if (prodSeries != null) {
            stmt.bindString(8, prodSeries);
        }
 
        String saleorderNo = entity.getSaleorderNo();
        if (saleorderNo != null) {
            stmt.bindString(9, saleorderNo);
        }
 
        String saleorderLine = entity.getSaleorderLine();
        if (saleorderLine != null) {
            stmt.bindString(10, saleorderLine);
        }
 
        String sapmoCode = entity.getSapmoCode();
        if (sapmoCode != null) {
            stmt.bindString(11, sapmoCode);
        }
 
        String sapmoCodeline = entity.getSapmoCodeline();
        if (sapmoCodeline != null) {
            stmt.bindString(12, sapmoCodeline);
        }
 
        java.util.Date sendDate = entity.getSendDate();
        if (sendDate != null) {
            stmt.bindLong(13, sendDate.getTime());
        }
 
        java.util.Date finishDate = entity.getFinishDate();
        if (finishDate != null) {
            stmt.bindLong(14, finishDate.getTime());
        }
 
        String tsCode = entity.getTsCode();
        if (tsCode != null) {
            stmt.bindString(15, tsCode);
        }
 
        java.util.Date customerDelivery = entity.getCustomerDelivery();
        if (customerDelivery != null) {
            stmt.bindLong(16, customerDelivery.getTime());
        }
 
        java.util.Date shippingDate = entity.getShippingDate();
        if (shippingDate != null) {
            stmt.bindLong(17, shippingDate.getTime());
        }
 
        String sapCode = entity.getSapCode();
        if (sapCode != null) {
            stmt.bindString(18, sapCode);
        }
 
        String customprodNo = entity.getCustomprodNo();
        if (customprodNo != null) {
            stmt.bindString(19, customprodNo);
        }
 
        String prodName = entity.getProdName();
        if (prodName != null) {
            stmt.bindString(20, prodName);
        }
 
        String inoutType = entity.getInoutType();
        if (inoutType != null) {
            stmt.bindString(21, inoutType);
        }
 
        String spec = entity.getSpec();
        if (spec != null) {
            stmt.bindString(22, spec);
        }
 
        Integer totalTime = entity.getTotalTime();
        if (totalTime != null) {
            stmt.bindLong(23, totalTime);
        }
 
        Integer qty = entity.getQty();
        if (qty != null) {
            stmt.bindLong(24, qty);
        }
 
        Integer fastPass = entity.getFastPass();
        if (fastPass != null) {
            stmt.bindLong(25, fastPass);
        }
 
        Integer price = entity.getPrice();
        if (price != null) {
            stmt.bindLong(26, price);
        }
 
        Integer productionValue = entity.getProductionValue();
        if (productionValue != null) {
            stmt.bindLong(27, productionValue);
        }
 
        String jjAssigning = entity.getJjAssigning();
        if (jjAssigning != null) {
            stmt.bindString(28, jjAssigning);
        }
 
        String tsAssigning = entity.getTsAssigning();
        if (tsAssigning != null) {
            stmt.bindString(29, tsAssigning);
        }
 
        java.util.Date finishDate0 = entity.getFinishDate0();
        if (finishDate0 != null) {
            stmt.bindLong(30, finishDate0.getTime());
        }
 
        java.util.Date finishDate1 = entity.getFinishDate1();
        if (finishDate1 != null) {
            stmt.bindLong(31, finishDate1.getTime());
        }
 
        java.util.Date finishDate2 = entity.getFinishDate2();
        if (finishDate2 != null) {
            stmt.bindLong(32, finishDate2.getTime());
        }
 
        java.util.Date finishDate3 = entity.getFinishDate3();
        if (finishDate3 != null) {
            stmt.bindLong(33, finishDate3.getTime());
        }
 
        java.util.Date finishDate4 = entity.getFinishDate4();
        if (finishDate4 != null) {
            stmt.bindLong(34, finishDate4.getTime());
        }
 
        java.util.Date finishDate5 = entity.getFinishDate5();
        if (finishDate5 != null) {
            stmt.bindLong(35, finishDate5.getTime());
        }
 
        java.util.Date finishDate6 = entity.getFinishDate6();
        if (finishDate6 != null) {
            stmt.bindLong(36, finishDate6.getTime());
        }
 
        java.util.Date finishDate7 = entity.getFinishDate7();
        if (finishDate7 != null) {
            stmt.bindLong(37, finishDate7.getTime());
        }
 
        java.util.Date finishDate8 = entity.getFinishDate8();
        if (finishDate8 != null) {
            stmt.bindLong(38, finishDate8.getTime());
        }
 
        java.util.Date finishDate9 = entity.getFinishDate9();
        if (finishDate9 != null) {
            stmt.bindLong(39, finishDate9.getTime());
        }
 
        java.util.Date finishDate10 = entity.getFinishDate10();
        if (finishDate10 != null) {
            stmt.bindLong(40, finishDate10.getTime());
        }
 
        java.util.Date finishDate11 = entity.getFinishDate11();
        if (finishDate11 != null) {
            stmt.bindLong(41, finishDate11.getTime());
        }
 
        java.util.Date finishDate12 = entity.getFinishDate12();
        if (finishDate12 != null) {
            stmt.bindLong(42, finishDate12.getTime());
        }
 
        java.util.Date finishDate13 = entity.getFinishDate13();
        if (finishDate13 != null) {
            stmt.bindLong(43, finishDate13.getTime());
        }
 
        java.util.Date finishDate14 = entity.getFinishDate14();
        if (finishDate14 != null) {
            stmt.bindLong(44, finishDate14.getTime());
        }
 
        java.util.Date finishDate15 = entity.getFinishDate15();
        if (finishDate15 != null) {
            stmt.bindLong(45, finishDate15.getTime());
        }
 
        java.util.Date finishDate16 = entity.getFinishDate16();
        if (finishDate16 != null) {
            stmt.bindLong(46, finishDate16.getTime());
        }
 
        java.util.Date finishDate17 = entity.getFinishDate17();
        if (finishDate17 != null) {
            stmt.bindLong(47, finishDate17.getTime());
        }
 
        java.util.Date finishDate18 = entity.getFinishDate18();
        if (finishDate18 != null) {
            stmt.bindLong(48, finishDate18.getTime());
        }
 
        java.util.Date finishDate19 = entity.getFinishDate19();
        if (finishDate19 != null) {
            stmt.bindLong(49, finishDate19.getTime());
        }
 
        java.util.Date finishDate20 = entity.getFinishDate20();
        if (finishDate20 != null) {
            stmt.bindLong(50, finishDate20.getTime());
        }
 
        String remakes = entity.getRemakes();
        if (remakes != null) {
            stmt.bindString(51, remakes);
        }
 
        String monthly = entity.getMonthly();
        if (monthly != null) {
            stmt.bindString(52, monthly);
        }
 
        String week = entity.getWeek();
        if (week != null) {
            stmt.bindString(53, week);
        }
 
        String lockFlag = entity.getLockFlag();
        if (lockFlag != null) {
            stmt.bindString(54, lockFlag);
        }
 
        String fCreatorruserid = entity.getFCreatorruserid();
        if (fCreatorruserid != null) {
            stmt.bindString(55, fCreatorruserid);
        }
 
        java.util.Date fCreatortime = entity.getFCreatortime();
        if (fCreatortime != null) {
            stmt.bindLong(56, fCreatortime.getTime());
        }
 
        String fLockcreatorruserid = entity.getFLockcreatorruserid();
        if (fLockcreatorruserid != null) {
            stmt.bindString(57, fLockcreatorruserid);
        }
 
        java.util.Date fLockcreatortime = entity.getFLockcreatortime();
        if (fLockcreatortime != null) {
            stmt.bindLong(58, fLockcreatortime.getTime());
        }
 
        String remark2 = entity.getRemark2();
        if (remark2 != null) {
            stmt.bindString(59, remark2);
        }
 
        String field02 = entity.getField02();
        if (field02 != null) {
            stmt.bindString(60, field02);
        }
 
        String field03 = entity.getField03();
        if (field03 != null) {
            stmt.bindString(61, field03);
        }
 
        String field04 = entity.getField04();
        if (field04 != null) {
            stmt.bindString(62, field04);
        }
 
        String field05 = entity.getField05();
        if (field05 != null) {
            stmt.bindString(63, field05);
        }
 
        String fDeletemark = entity.getFDeletemark();
        if (fDeletemark != null) {
            stmt.bindString(64, fDeletemark);
        }
 
        java.util.Date fLastmodifytime = entity.getFLastmodifytime();
        if (fLastmodifytime != null) {
            stmt.bindLong(65, fLastmodifytime.getTime());
        }
 
        String fLastmodifyuserid = entity.getFLastmodifyuserid();
        if (fLastmodifyuserid != null) {
            stmt.bindString(66, fLastmodifyuserid);
        }
 
        java.util.Date fDeletetime = entity.getFDeletetime();
        if (fDeletetime != null) {
            stmt.bindLong(67, fDeletetime.getTime());
        }
 
        String fDeleteuserid = entity.getFDeleteuserid();
        if (fDeleteuserid != null) {
            stmt.bindString(68, fDeleteuserid);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Plan entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getMonthId());
 
        String pic = entity.getPic();
        if (pic != null) {
            stmt.bindString(3, pic);
        }
 
        String factoryCode = entity.getFactoryCode();
        if (factoryCode != null) {
            stmt.bindString(4, factoryCode);
        }
 
        String brand = entity.getBrand();
        if (brand != null) {
            stmt.bindString(5, brand);
        }
 
        String classes = entity.getClasses();
        if (classes != null) {
            stmt.bindString(6, classes);
        }
 
        String series = entity.getSeries();
        if (series != null) {
            stmt.bindString(7, series);
        }
 
        String prodSeries = entity.getProdSeries();
        if (prodSeries != null) {
            stmt.bindString(8, prodSeries);
        }
 
        String saleorderNo = entity.getSaleorderNo();
        if (saleorderNo != null) {
            stmt.bindString(9, saleorderNo);
        }
 
        String saleorderLine = entity.getSaleorderLine();
        if (saleorderLine != null) {
            stmt.bindString(10, saleorderLine);
        }
 
        String sapmoCode = entity.getSapmoCode();
        if (sapmoCode != null) {
            stmt.bindString(11, sapmoCode);
        }
 
        String sapmoCodeline = entity.getSapmoCodeline();
        if (sapmoCodeline != null) {
            stmt.bindString(12, sapmoCodeline);
        }
 
        java.util.Date sendDate = entity.getSendDate();
        if (sendDate != null) {
            stmt.bindLong(13, sendDate.getTime());
        }
 
        java.util.Date finishDate = entity.getFinishDate();
        if (finishDate != null) {
            stmt.bindLong(14, finishDate.getTime());
        }
 
        String tsCode = entity.getTsCode();
        if (tsCode != null) {
            stmt.bindString(15, tsCode);
        }
 
        java.util.Date customerDelivery = entity.getCustomerDelivery();
        if (customerDelivery != null) {
            stmt.bindLong(16, customerDelivery.getTime());
        }
 
        java.util.Date shippingDate = entity.getShippingDate();
        if (shippingDate != null) {
            stmt.bindLong(17, shippingDate.getTime());
        }
 
        String sapCode = entity.getSapCode();
        if (sapCode != null) {
            stmt.bindString(18, sapCode);
        }
 
        String customprodNo = entity.getCustomprodNo();
        if (customprodNo != null) {
            stmt.bindString(19, customprodNo);
        }
 
        String prodName = entity.getProdName();
        if (prodName != null) {
            stmt.bindString(20, prodName);
        }
 
        String inoutType = entity.getInoutType();
        if (inoutType != null) {
            stmt.bindString(21, inoutType);
        }
 
        String spec = entity.getSpec();
        if (spec != null) {
            stmt.bindString(22, spec);
        }
 
        Integer totalTime = entity.getTotalTime();
        if (totalTime != null) {
            stmt.bindLong(23, totalTime);
        }
 
        Integer qty = entity.getQty();
        if (qty != null) {
            stmt.bindLong(24, qty);
        }
 
        Integer fastPass = entity.getFastPass();
        if (fastPass != null) {
            stmt.bindLong(25, fastPass);
        }
 
        Integer price = entity.getPrice();
        if (price != null) {
            stmt.bindLong(26, price);
        }
 
        Integer productionValue = entity.getProductionValue();
        if (productionValue != null) {
            stmt.bindLong(27, productionValue);
        }
 
        String jjAssigning = entity.getJjAssigning();
        if (jjAssigning != null) {
            stmt.bindString(28, jjAssigning);
        }
 
        String tsAssigning = entity.getTsAssigning();
        if (tsAssigning != null) {
            stmt.bindString(29, tsAssigning);
        }
 
        java.util.Date finishDate0 = entity.getFinishDate0();
        if (finishDate0 != null) {
            stmt.bindLong(30, finishDate0.getTime());
        }
 
        java.util.Date finishDate1 = entity.getFinishDate1();
        if (finishDate1 != null) {
            stmt.bindLong(31, finishDate1.getTime());
        }
 
        java.util.Date finishDate2 = entity.getFinishDate2();
        if (finishDate2 != null) {
            stmt.bindLong(32, finishDate2.getTime());
        }
 
        java.util.Date finishDate3 = entity.getFinishDate3();
        if (finishDate3 != null) {
            stmt.bindLong(33, finishDate3.getTime());
        }
 
        java.util.Date finishDate4 = entity.getFinishDate4();
        if (finishDate4 != null) {
            stmt.bindLong(34, finishDate4.getTime());
        }
 
        java.util.Date finishDate5 = entity.getFinishDate5();
        if (finishDate5 != null) {
            stmt.bindLong(35, finishDate5.getTime());
        }
 
        java.util.Date finishDate6 = entity.getFinishDate6();
        if (finishDate6 != null) {
            stmt.bindLong(36, finishDate6.getTime());
        }
 
        java.util.Date finishDate7 = entity.getFinishDate7();
        if (finishDate7 != null) {
            stmt.bindLong(37, finishDate7.getTime());
        }
 
        java.util.Date finishDate8 = entity.getFinishDate8();
        if (finishDate8 != null) {
            stmt.bindLong(38, finishDate8.getTime());
        }
 
        java.util.Date finishDate9 = entity.getFinishDate9();
        if (finishDate9 != null) {
            stmt.bindLong(39, finishDate9.getTime());
        }
 
        java.util.Date finishDate10 = entity.getFinishDate10();
        if (finishDate10 != null) {
            stmt.bindLong(40, finishDate10.getTime());
        }
 
        java.util.Date finishDate11 = entity.getFinishDate11();
        if (finishDate11 != null) {
            stmt.bindLong(41, finishDate11.getTime());
        }
 
        java.util.Date finishDate12 = entity.getFinishDate12();
        if (finishDate12 != null) {
            stmt.bindLong(42, finishDate12.getTime());
        }
 
        java.util.Date finishDate13 = entity.getFinishDate13();
        if (finishDate13 != null) {
            stmt.bindLong(43, finishDate13.getTime());
        }
 
        java.util.Date finishDate14 = entity.getFinishDate14();
        if (finishDate14 != null) {
            stmt.bindLong(44, finishDate14.getTime());
        }
 
        java.util.Date finishDate15 = entity.getFinishDate15();
        if (finishDate15 != null) {
            stmt.bindLong(45, finishDate15.getTime());
        }
 
        java.util.Date finishDate16 = entity.getFinishDate16();
        if (finishDate16 != null) {
            stmt.bindLong(46, finishDate16.getTime());
        }
 
        java.util.Date finishDate17 = entity.getFinishDate17();
        if (finishDate17 != null) {
            stmt.bindLong(47, finishDate17.getTime());
        }
 
        java.util.Date finishDate18 = entity.getFinishDate18();
        if (finishDate18 != null) {
            stmt.bindLong(48, finishDate18.getTime());
        }
 
        java.util.Date finishDate19 = entity.getFinishDate19();
        if (finishDate19 != null) {
            stmt.bindLong(49, finishDate19.getTime());
        }
 
        java.util.Date finishDate20 = entity.getFinishDate20();
        if (finishDate20 != null) {
            stmt.bindLong(50, finishDate20.getTime());
        }
 
        String remakes = entity.getRemakes();
        if (remakes != null) {
            stmt.bindString(51, remakes);
        }
 
        String monthly = entity.getMonthly();
        if (monthly != null) {
            stmt.bindString(52, monthly);
        }
 
        String week = entity.getWeek();
        if (week != null) {
            stmt.bindString(53, week);
        }
 
        String lockFlag = entity.getLockFlag();
        if (lockFlag != null) {
            stmt.bindString(54, lockFlag);
        }
 
        String fCreatorruserid = entity.getFCreatorruserid();
        if (fCreatorruserid != null) {
            stmt.bindString(55, fCreatorruserid);
        }
 
        java.util.Date fCreatortime = entity.getFCreatortime();
        if (fCreatortime != null) {
            stmt.bindLong(56, fCreatortime.getTime());
        }
 
        String fLockcreatorruserid = entity.getFLockcreatorruserid();
        if (fLockcreatorruserid != null) {
            stmt.bindString(57, fLockcreatorruserid);
        }
 
        java.util.Date fLockcreatortime = entity.getFLockcreatortime();
        if (fLockcreatortime != null) {
            stmt.bindLong(58, fLockcreatortime.getTime());
        }
 
        String remark2 = entity.getRemark2();
        if (remark2 != null) {
            stmt.bindString(59, remark2);
        }
 
        String field02 = entity.getField02();
        if (field02 != null) {
            stmt.bindString(60, field02);
        }
 
        String field03 = entity.getField03();
        if (field03 != null) {
            stmt.bindString(61, field03);
        }
 
        String field04 = entity.getField04();
        if (field04 != null) {
            stmt.bindString(62, field04);
        }
 
        String field05 = entity.getField05();
        if (field05 != null) {
            stmt.bindString(63, field05);
        }
 
        String fDeletemark = entity.getFDeletemark();
        if (fDeletemark != null) {
            stmt.bindString(64, fDeletemark);
        }
 
        java.util.Date fLastmodifytime = entity.getFLastmodifytime();
        if (fLastmodifytime != null) {
            stmt.bindLong(65, fLastmodifytime.getTime());
        }
 
        String fLastmodifyuserid = entity.getFLastmodifyuserid();
        if (fLastmodifyuserid != null) {
            stmt.bindString(66, fLastmodifyuserid);
        }
 
        java.util.Date fDeletetime = entity.getFDeletetime();
        if (fDeletetime != null) {
            stmt.bindLong(67, fDeletetime.getTime());
        }
 
        String fDeleteuserid = entity.getFDeleteuserid();
        if (fDeleteuserid != null) {
            stmt.bindString(68, fDeleteuserid);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Plan readEntity(Cursor cursor, int offset) {
        Plan entity = new Plan( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getLong(offset + 1), // monthId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // pic
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // factoryCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // brand
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // classes
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // series
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // prodSeries
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // saleorderNo
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // saleorderLine
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // sapmoCode
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // sapmoCodeline
            cursor.isNull(offset + 12) ? null : new java.util.Date(cursor.getLong(offset + 12)), // sendDate
            cursor.isNull(offset + 13) ? null : new java.util.Date(cursor.getLong(offset + 13)), // finishDate
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // tsCode
            cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)), // customerDelivery
            cursor.isNull(offset + 16) ? null : new java.util.Date(cursor.getLong(offset + 16)), // shippingDate
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // sapCode
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // customprodNo
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // prodName
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // inoutType
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // spec
            cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22), // totalTime
            cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23), // qty
            cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24), // fastPass
            cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25), // price
            cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26), // productionValue
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // jjAssigning
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // tsAssigning
            cursor.isNull(offset + 29) ? null : new java.util.Date(cursor.getLong(offset + 29)), // finishDate0
            cursor.isNull(offset + 30) ? null : new java.util.Date(cursor.getLong(offset + 30)), // finishDate1
            cursor.isNull(offset + 31) ? null : new java.util.Date(cursor.getLong(offset + 31)), // finishDate2
            cursor.isNull(offset + 32) ? null : new java.util.Date(cursor.getLong(offset + 32)), // finishDate3
            cursor.isNull(offset + 33) ? null : new java.util.Date(cursor.getLong(offset + 33)), // finishDate4
            cursor.isNull(offset + 34) ? null : new java.util.Date(cursor.getLong(offset + 34)), // finishDate5
            cursor.isNull(offset + 35) ? null : new java.util.Date(cursor.getLong(offset + 35)), // finishDate6
            cursor.isNull(offset + 36) ? null : new java.util.Date(cursor.getLong(offset + 36)), // finishDate7
            cursor.isNull(offset + 37) ? null : new java.util.Date(cursor.getLong(offset + 37)), // finishDate8
            cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)), // finishDate9
            cursor.isNull(offset + 39) ? null : new java.util.Date(cursor.getLong(offset + 39)), // finishDate10
            cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)), // finishDate11
            cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)), // finishDate12
            cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)), // finishDate13
            cursor.isNull(offset + 43) ? null : new java.util.Date(cursor.getLong(offset + 43)), // finishDate14
            cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)), // finishDate15
            cursor.isNull(offset + 45) ? null : new java.util.Date(cursor.getLong(offset + 45)), // finishDate16
            cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)), // finishDate17
            cursor.isNull(offset + 47) ? null : new java.util.Date(cursor.getLong(offset + 47)), // finishDate18
            cursor.isNull(offset + 48) ? null : new java.util.Date(cursor.getLong(offset + 48)), // finishDate19
            cursor.isNull(offset + 49) ? null : new java.util.Date(cursor.getLong(offset + 49)), // finishDate20
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // remakes
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // monthly
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // week
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // lockFlag
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // fCreatorruserid
            cursor.isNull(offset + 55) ? null : new java.util.Date(cursor.getLong(offset + 55)), // fCreatortime
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // fLockcreatorruserid
            cursor.isNull(offset + 57) ? null : new java.util.Date(cursor.getLong(offset + 57)), // fLockcreatortime
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // remark2
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // field02
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // field03
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // field04
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // field05
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // fDeletemark
            cursor.isNull(offset + 64) ? null : new java.util.Date(cursor.getLong(offset + 64)), // fLastmodifytime
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // fLastmodifyuserid
            cursor.isNull(offset + 66) ? null : new java.util.Date(cursor.getLong(offset + 66)), // fDeletetime
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67) // fDeleteuserid
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Plan entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMonthId(cursor.getLong(offset + 1));
        entity.setPic(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setFactoryCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setBrand(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setClasses(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setSeries(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setProdSeries(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSaleorderNo(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setSaleorderLine(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setSapmoCode(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setSapmoCodeline(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setSendDate(cursor.isNull(offset + 12) ? null : new java.util.Date(cursor.getLong(offset + 12)));
        entity.setFinishDate(cursor.isNull(offset + 13) ? null : new java.util.Date(cursor.getLong(offset + 13)));
        entity.setTsCode(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setCustomerDelivery(cursor.isNull(offset + 15) ? null : new java.util.Date(cursor.getLong(offset + 15)));
        entity.setShippingDate(cursor.isNull(offset + 16) ? null : new java.util.Date(cursor.getLong(offset + 16)));
        entity.setSapCode(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setCustomprodNo(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setProdName(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setInoutType(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setSpec(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setTotalTime(cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22));
        entity.setQty(cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23));
        entity.setFastPass(cursor.isNull(offset + 24) ? null : cursor.getInt(offset + 24));
        entity.setPrice(cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25));
        entity.setProductionValue(cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26));
        entity.setJjAssigning(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setTsAssigning(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setFinishDate0(cursor.isNull(offset + 29) ? null : new java.util.Date(cursor.getLong(offset + 29)));
        entity.setFinishDate1(cursor.isNull(offset + 30) ? null : new java.util.Date(cursor.getLong(offset + 30)));
        entity.setFinishDate2(cursor.isNull(offset + 31) ? null : new java.util.Date(cursor.getLong(offset + 31)));
        entity.setFinishDate3(cursor.isNull(offset + 32) ? null : new java.util.Date(cursor.getLong(offset + 32)));
        entity.setFinishDate4(cursor.isNull(offset + 33) ? null : new java.util.Date(cursor.getLong(offset + 33)));
        entity.setFinishDate5(cursor.isNull(offset + 34) ? null : new java.util.Date(cursor.getLong(offset + 34)));
        entity.setFinishDate6(cursor.isNull(offset + 35) ? null : new java.util.Date(cursor.getLong(offset + 35)));
        entity.setFinishDate7(cursor.isNull(offset + 36) ? null : new java.util.Date(cursor.getLong(offset + 36)));
        entity.setFinishDate8(cursor.isNull(offset + 37) ? null : new java.util.Date(cursor.getLong(offset + 37)));
        entity.setFinishDate9(cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)));
        entity.setFinishDate10(cursor.isNull(offset + 39) ? null : new java.util.Date(cursor.getLong(offset + 39)));
        entity.setFinishDate11(cursor.isNull(offset + 40) ? null : new java.util.Date(cursor.getLong(offset + 40)));
        entity.setFinishDate12(cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)));
        entity.setFinishDate13(cursor.isNull(offset + 42) ? null : new java.util.Date(cursor.getLong(offset + 42)));
        entity.setFinishDate14(cursor.isNull(offset + 43) ? null : new java.util.Date(cursor.getLong(offset + 43)));
        entity.setFinishDate15(cursor.isNull(offset + 44) ? null : new java.util.Date(cursor.getLong(offset + 44)));
        entity.setFinishDate16(cursor.isNull(offset + 45) ? null : new java.util.Date(cursor.getLong(offset + 45)));
        entity.setFinishDate17(cursor.isNull(offset + 46) ? null : new java.util.Date(cursor.getLong(offset + 46)));
        entity.setFinishDate18(cursor.isNull(offset + 47) ? null : new java.util.Date(cursor.getLong(offset + 47)));
        entity.setFinishDate19(cursor.isNull(offset + 48) ? null : new java.util.Date(cursor.getLong(offset + 48)));
        entity.setFinishDate20(cursor.isNull(offset + 49) ? null : new java.util.Date(cursor.getLong(offset + 49)));
        entity.setRemakes(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setMonthly(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setWeek(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setLockFlag(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setFCreatorruserid(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setFCreatortime(cursor.isNull(offset + 55) ? null : new java.util.Date(cursor.getLong(offset + 55)));
        entity.setFLockcreatorruserid(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setFLockcreatortime(cursor.isNull(offset + 57) ? null : new java.util.Date(cursor.getLong(offset + 57)));
        entity.setRemark2(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setField02(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setField03(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setField04(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setField05(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setFDeletemark(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setFLastmodifytime(cursor.isNull(offset + 64) ? null : new java.util.Date(cursor.getLong(offset + 64)));
        entity.setFLastmodifyuserid(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setFDeletetime(cursor.isNull(offset + 66) ? null : new java.util.Date(cursor.getLong(offset + 66)));
        entity.setFDeleteuserid(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Plan entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Plan entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Plan entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
    /** Internal query to resolve the "planList" to-many relationship of PlanMonth. */
    public List<Plan> _queryPlanMonth_PlanList(Long monthId) {
        synchronized (this) {
            if (planMonth_PlanListQuery == null) {
                QueryBuilder<Plan> queryBuilder = queryBuilder();
                queryBuilder.where(Properties.MonthId.eq(null));
                planMonth_PlanListQuery = queryBuilder.build();
            }
        }
        Query<Plan> query = planMonth_PlanListQuery.forCurrentThread();
        query.setParameter(0, monthId);
        return query.list();
    }

}
